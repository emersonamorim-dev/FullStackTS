{"ast":null,"code":"import { Router } from '@angular/router';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AutomovelService } from '../../services/automovel.service';\nimport { ConfirmationService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/automovel.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/confirmdialog\";\nvar AddAutomovelComponent = /** @class */function () {\n  function AddAutomovelComponent(automovelService, router, formBuilder, confirmationService) {\n    this.automovelService = automovelService;\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this.confirmationService = confirmationService;\n    this.automovel = [];\n    this.automovelDialog = false;\n    //variável pública local\n    this.addAutomovelRequest = {\n      id: '',\n      placa: '',\n      veiculo: ''\n    };\n  }\n  AddAutomovelComponent.prototype.ngOnInit = function () {\n    this.addAutomovelForm = this.formBuilder.group({\n      placa: ['', [Validators.required]],\n      veiculo: ['', [Validators.required]]\n    });\n    this.addAutomovelForm.markAllAsTouched();\n  };\n  AddAutomovelComponent.prototype.confirm = function () {\n    this.confirmationService.confirm({\n      message: 'Are you sure that you want to perform this action?',\n      accept: function () {\n        //Actual logic to perform a confirmation\n      }\n    });\n  };\n  AddAutomovelComponent.prototype.addAutomovel = function () {\n    var _this = this;\n    this.automovelService.addAutomovel(this.addAutomovelRequest).subscribe({\n      next: function (x) {\n        alert(\"Automovel adicionado com sucesso.\");\n        _this.router.navigate(['automovel']);\n      },\n      error: function (response) {\n        console.log(response);\n      }\n    });\n  };\n  AddAutomovelComponent.ɵfac = function AddAutomovelComponent_Factory(t) {\n    return new (t || AddAutomovelComponent)(i0.ɵɵdirectiveInject(i1.AutomovelService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ConfirmationService));\n  };\n  AddAutomovelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddAutomovelComponent,\n    selectors: [[\"app-add-automovel\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"container\", \"my-5\"], [1, \"mb-3\"], [1, \"row\"], [1, \"col-6\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"placa\", \"name\", \"placa\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"veiculo\", \"name\", \"veiculo\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-2\"], [\"header\", \"Confirmation\", \"icon\", \"pi pi-exclamation-triangle\"], [\"pButton\", \"\", \"icon\", \"pi pi-check\", \"label\", \"Confirmar\", 3, \"click\"]],\n    template: function AddAutomovelComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Cadastrar Autom\\u00F3vel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4, 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AddAutomovelComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.addAutomovel();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n        i0.ɵɵtext(9, \"Placa\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddAutomovelComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.addAutomovelRequest.placa = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Ve\\u00EDculo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function AddAutomovelComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.addAutomovelRequest.veiculo = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵtext(16, \"Salvar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"p-confirmDialog\", 12);\n        i0.ɵɵelementStart(18, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AddAutomovelComponent_Template_button_click_18_listener() {\n          return ctx.confirm();\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngModel\", ctx.addAutomovelRequest.placa);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addAutomovelRequest.veiculo);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i5.ButtonDirective, i6.ConfirmDialog],\n    styles: [\".form-control[_ngcontent-%COMP%]{border:2px solid}.was-validated[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]:invalid, .form-control.is-invalid[_ngcontent-%COMP%]{border-color:#dc3545}input[_ngcontent-%COMP%]:disabled{background-color:#97929248;cursor:not-allowed}\"]\n  });\n  return AddAutomovelComponent;\n}();\nexport { AddAutomovelComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}